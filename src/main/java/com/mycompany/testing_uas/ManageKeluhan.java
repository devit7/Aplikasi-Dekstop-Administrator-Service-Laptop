/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.testing_uas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FA506
 */
public class ManageKeluhan extends javax.swing.JDialog {

    /**
     * Creates new form ManageKeluhan
     */
    public ManageKeluhan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jTable1.setModel(model);
        loadKolom();
        TampilService();
        refres();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnHarga = new javax.swing.JButton();
        btnSparepart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Service", "Deskripsi", "Terkahir Diperbarui", "Sparepart", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAdd.setText("Add +");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnHarga.setText("Beri Harga");
        btnHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHargaActionPerformed(evt);
            }
        });

        btnSparepart.setText("Manage Sparepart");
        btnSparepart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparepartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSparepart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnHarga)
                    .addComponent(btnSparepart))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel1.setText("!! ANDA BELUM MEMASUKAN KELUHAN !!");

        jButton5.setText("Close");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(115, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)))))
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(262, 262, 262)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private DefaultTableModel model = new DefaultTableModel();
    private Connection con = Database.getConnection();
    private ArrayList<Service> listServices = new ArrayList<>();
    
    
    public void LoadService(){
        System.out.println("Load service dijalankan");
        if(con != null){
            System.out.println("Koneksi terhubung");
            listServices =new ArrayList();
            String sql = "SELECT ds.id_data_service, ds.service_tambahan, ds.deskripsi, COUNT(dsp.id_sperpart) AS jumlahpart, ds.HistoryKeluhan, ds.price FROM data_service ds LEFT JOIN detail_sperpart dsp ON ds.id_data_service = dsp.id_data_service WHERE ds.id_detail_barang = ? GROUP BY ds.id_data_service";
            try{
                System.out.println("try catch dijalankan");
                System.out.println("id detail barang : "+id_detail_barang_1);
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setInt(1, id_detail_barang_1);
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    int id_data_service = rs.getInt("id_data_service");
                    String service_tambahan = rs.getString("service_tambahan");
                    String Desk = rs.getString("deskripsi");
                    String part =rs.getString("jumlahpart");
                    String history = rs.getString("HistoryKeluhan");
                    int harga = rs.getInt("price");
                    System.out.println("iddataserv "+id_data_service+"barang "+ service_tambahan+"deskripsi "+ Desk+"sparepart"+part+"histori "+history+"harga"+harga);
                    Service service = new Service(id_data_service,service_tambahan,Desk,part,history,harga);

                    //masukan ke arraylist
                    listServices.add(service);
                }
                rs.close();
                ps.close();
            }catch(Exception e){
                System.out.println("Error : "+e.getMessage());
            }
        }
    }
    public void refres(){
        System.out.println("refres dijalankan");
        model.setRowCount(0);
        LoadService();
        TampilService();

    }
    public void loadKolom(){
        System.out.println("load kolom dijalankan");
        model.addColumn("ID");
        model.addColumn("Service");
        model.addColumn("Deskripsi");
        model.addColumn("Sparepart");
        model.addColumn("HistoryKeluhan");
        model.addColumn("harga");
    }
    private int id_detail_barang_1;
    public void DataDiterima(int id_detail_barang){
        this.id_detail_barang_1=id_detail_barang;
        LoadService();
        TampilService();
        System.out.println("id detail barang : "+this.id_detail_barang_1);
    }


    public void TampilService(){
        model.setRowCount(0);
        for(Service b : listServices){
            model.addRow(new Object[]{
                b.getId_data_service(),
                b.getService_tambahan(),
                b.getDeskripsi(),
                b.getSparepart(),
                b.getHistory(),
                b.getHarga()
            });
        }
    }
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        InputKeluhan ik = new InputKeluhan(null,true);
        ik.DataDiterima(id_detail_barang_1);
        ik.GantiNama(2);
        ik.setVisible(true);
        refres();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int baristerpilih = jTable1.getSelectedRow();

        int id = listServices.get(baristerpilih).getId_data_service();
        int id_detail = listServices.get(baristerpilih).getId_data_service();
        String service_tambahan = listServices.get(baristerpilih).getService_tambahan();
        String desk = listServices.get(baristerpilih).getDeskripsi();
        String history = listServices.get(baristerpilih).getHistory();
        int harga = listServices.get(baristerpilih).getHarga();
        
        InputKeluhan ik = new InputKeluhan(null,true);
        ik.DataDiterima2(id,id_detail,service_tambahan,desk,history,harga);

        
        ik.GantiNama(1);
        ik.setVisible(true);
        refres();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHargaActionPerformed
        // TODO add your handling code here:
        int baristerpilih = jTable1.getSelectedRow();
        int id = listServices.get(baristerpilih).getId_data_service();
        String service_tambahan = listServices.get(baristerpilih).getService_tambahan();
        int harga = listServices.get(baristerpilih).getHarga();

        inputHarga ih = new inputHarga(null,true);
        ih.DataDiterima(id, service_tambahan, harga);
        ih.setVisible(true);
        refres();
    }//GEN-LAST:event_btnHargaActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int baristerpilih = jTable1.getSelectedRow();
        int id = listServices.get(baristerpilih).getId_data_service();
        int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if(confirm == JOptionPane.YES_OPTION){
            try{
                String sql = "DELETE FROM data_service WHERE id_data_service = ?";
                PreparedStatement state = con.prepareStatement(sql);
                state.setInt(1, id);
                state.executeUpdate();
                state.close();
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                refres();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Data gagal dihapus");
                e.printStackTrace();
            }
        }
        refres();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnSparepartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparepartActionPerformed
        // TODO add your handling code here:
        
        
        int baristerpilih = jTable1.getSelectedRow();
        int id = listServices.get(baristerpilih).getId_data_service();
        
        ManageSparepart ms = new ManageSparepart(null, true);
        ms.DataDiterima(id);
        ms.setVisible(true);
        refres();
    }//GEN-LAST:event_btnSparepartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageKeluhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageKeluhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageKeluhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageKeluhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageKeluhan dialog = new ManageKeluhan(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHarga;
    private javax.swing.JButton btnSparepart;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
class Service{
    private int id_data_service;
    private String service_tambahan;
    private String deskripsi;
    private String sparepart;
    private String history;
    private int harga;
    public Service(int id_data_service,String service_tambahan, String deskripsi,String sparepart, String history, int harga){
        this.id_data_service=id_data_service;
        this.service_tambahan=service_tambahan;
        this.deskripsi=deskripsi;
        this.sparepart=sparepart;
        this.history=history;
        this.harga=harga;
    }
    public void setId_data_service(int id_data_service) {
        this.id_data_service = id_data_service;
    }
    public void setService_tambahan(String service_tambahan) {
        this.service_tambahan = service_tambahan;
    }
    public void setDeskripsi(String deskripsi) {
        this.deskripsi = deskripsi;
    }
    public void setHistory(String history) {
        this.history = history;
    }
    public void setHarga(int harga) {
        this.harga = harga;
    }
    public void setSparepart(String Sparepart){
        this.sparepart=sparepart;
    }
    public int getId_data_service() {
        return id_data_service;
    }
    public String getService_tambahan() {
        return service_tambahan;
    }
    public String getDeskripsi() {
        return deskripsi;
    }
    public String getSparepart(){
        return sparepart;
    }
    public String getHistory() {
        return history;
    }
    public int getHarga() {
        return harga;
    }
}
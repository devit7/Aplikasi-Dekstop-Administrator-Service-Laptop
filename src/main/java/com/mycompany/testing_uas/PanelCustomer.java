/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.testing_uas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RICKY
 */
public class PanelCustomer extends javax.swing.JPanel {

    /**
     * Creates new form PanelCustomer
     */
    public PanelCustomer() {
        initComponents();
        LoadKolom();
        cellListener();
        jTableCustomer.setModel(model);
        LoadCustomers();
        Tampilcustomers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCustomer = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButtonAddCustomers = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButtonCari = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(205, 127, 50));

        jTableCustomer.setBackground(new java.awt.Color(239, 199, 194));
        jTableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Nama", "Alamat", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableCustomer);

        jPanel1.setBackground(new java.awt.Color(255, 229, 212));

        jButtonAddCustomers.setText("Add +");
        jButtonAddCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCustomersActionPerformed(evt);
            }
        });

        jButtonCari.setText("Cari");
        jButtonCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCariActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButtonAddCustomers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCari)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddCustomers)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonDelete)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCari))
                .addGap(17, 17, 17))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DATA CUSTOMER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(279, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(252, 252, 252))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addGap(51, 51, 51))
        );
    }// </editor-fold>//GEN-END:initComponents

    private DefaultTableModel model = new DefaultTableModel();
    private Connection con = Database.getConnection();
    private ArrayList<customers> listCustomers = new ArrayList<>();
    private void cellListener(){
        jTableCustomer.setModel(model);
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
        //menambahkan listener ke jtable
        jTableCustomer.getSelectionModel().addListSelectionListener(e -> {
            //mengambil baris yang dipilih
            boolean selectedRow = jTableCustomer.getSelectedRow() != -1;
            jButtonUpdate.setEnabled(selectedRow);
            jButtonDelete.setEnabled(selectedRow);
        });
    }
    private void LoadKolom(){
        model.addColumn("ID");
        model.addColumn("Nama");
        model.addColumn("Alamat");
        model.addColumn("Phone");
    }
    //menampilkan data customer ke dalam tabel
    public void LoadCustomers(){
        if(con != null){
            System.out.println("Koneksi terhubung");
            listCustomers =new ArrayList();
            String sql = "SELECT * FROM customer";
            try{
                PreparedStatement ps = con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while(rs.next()){
                    int id_customer = rs.getInt("id_customer");
                    String nama = rs.getString("nama");
                    String alamat = rs.getString("alamat");
                    String phone = rs.getString("phone");
                    customers customer = new customers(id_customer, nama, alamat, phone);
                    //masukan ke arraylist
                    listCustomers.add(customer);
                }
                rs.close();
                ps.close();
            }catch(Exception e){
                System.out.println("Error : "+e.getMessage());
            }
        }
    }
    public void Tampilcustomers(){
        model.setRowCount(0);
        //isi table No
        for(customers customer : listCustomers){
            model.addRow( new Object[]{customer.getId_customer(), customer.getNama(), customer.getAlamat(), customer.getPhone()});
        }
    }

    public void refres(){
        model.setRowCount(0);
        LoadCustomers();
        Tampilcustomers();

    }

    private void jButtonAddCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCustomersActionPerformed
        // TODO add your handling code here:
        CustomerUpdate addCustomers = new CustomerUpdate( null, true);
        addCustomers.GantiNama(2);
        addCustomers.setVisible(true);
        addCustomers.pack();
        addCustomers.setLocationRelativeTo(null);
        addCustomers.setDefaultCloseOperation(CustomerUpdate.DISPOSE_ON_CLOSE);
        refres();
    }//GEN-LAST:event_jButtonAddCustomersActionPerformed

    private void jButtonCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCariActionPerformed
        // TODO add your handling code here:
        //mengambil data dari textfield
        String cari = jTextField1.getText();
        // query search
        String sql = "SELECT * FROM customer WHERE nama LIKE ? OR alamat LIKE ? OR phone LIKE ?";
        try{
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, "%"+cari+"%");
            ps.setString(2, "%"+cari+"%");
            ps.setString(3, "%"+cari+"%");

            ResultSet rs = ps.executeQuery();
            model.setRowCount(0);
            while(rs.next()){
                int id_customer = rs.getInt("id_customer");
                String nama = rs.getString("nama");
                String alamat = rs.getString("alamat");
                String phone = rs.getString("phone");
                model.addRow(new Object[]{id_customer, nama, alamat, phone});
            }
            rs.close();
            ps.close();
        }catch(Exception e){
            System.out.println("Error : "+e.getMessage());
        }
    }//GEN-LAST:event_jButtonCariActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        int baristerpilih = jTableCustomer.getSelectedRow();
        int id_customer = (int) model.getValueAt(baristerpilih, 0);
        String nama = (String) model.getValueAt(baristerpilih, 1);
        String alamat = (String) model.getValueAt(baristerpilih, 2);
        String phone = (String) model.getValueAt(baristerpilih, 3);
        System.out.println("id_customer : "+id_customer);

        //muncul form update customer dari page CustomersUpdate.java
        CustomerUpdate updateCustomers = new CustomerUpdate( null, true);
        updateCustomers.GantiNama(1);
        updateCustomers.DataDiTerima(id_customer, nama, alamat, phone);
        updateCustomers.setVisible(true);
        updateCustomers.pack();
        updateCustomers.setLocationRelativeTo(null);
        updateCustomers.setDefaultCloseOperation(CustomerUpdate.DISPOSE_ON_CLOSE);
        refres();
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        // mengambil baris yang dipilih
        int baristerpilih = jTableCustomer.getSelectedRow();
        int id_customer = (int) model.getValueAt(baristerpilih, 0);
        //konfirmasi hapus
        int confirm = javax.swing.JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus data ini?","Konfirmasi", javax.swing.JOptionPane.YES_NO_OPTION);
        if(confirm == javax.swing.JOptionPane.YES_OPTION){
            //hapus data
            String sql = "DELETE FROM customer WHERE id_customer=?";
            try{
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setInt(1, id_customer);
                ps.executeUpdate();
                ps.close();
                refres();
            }catch(Exception e){
                System.out.println("Error : "+e.getMessage());
                JOptionPane.showMessageDialog(this, "Data gagal dihapus/terdapat data yang terkait");
            }
        }

    }//GEN-LAST:event_jButtonDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddCustomers;
    private javax.swing.JButton jButtonCari;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCustomer;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
class customers{
    private int id_customer;
    private String nama, alamat, phone;

    public customers( int id_customer, String nama, String alamat, String phone) {
        this.id_customer = id_customer;
        this.nama = nama;
        this.alamat = alamat;
        this.phone = phone;
    }

    public int getId_customer() {
        return this.id_customer;
    }

    public void setId_customer(int id_customer) {
        this.id_customer = id_customer;
    }

    public String getNama() {
        return this.nama;
    }

    public void setNama(String nama) {
        this.nama = nama;
    }

    public String getAlamat() {
        return this.alamat;
    }

    public void setAlamat(String alamat) {
        this.alamat = alamat;
    }

    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }
}
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.testing_uas;
import java.sql.*;
import javax.swing.JOptionPane;
import java.time.LocalDate;
import java.time.LocalDateTime;

/**
 *
 * @author FA506
 */
public class OrderServiceUpdate extends javax.swing.JDialog {

    /**
     * Creates new form OrderServiceUpdate
     */
    public OrderServiceUpdate(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        comboBX();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonClose = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldMerkLaptop = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldSerialNumber = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaKeterangan = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxNamaCustomer = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxUser = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbStatusBarang = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("USER UPDATE");

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Merk Laptop");

        jLabel3.setText("Serial Number");

        jLabel4.setText("Keterangan");

        jTextAreaKeterangan.setColumns(20);
        jTextAreaKeterangan.setRows(5);
        jScrollPane1.setViewportView(jTextAreaKeterangan);

        jLabel5.setText("Nama Customer");

        jLabel6.setText("Dikerjakan Oleh");

        jLabel7.setText("Status Barang ");

        cbStatusBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "belum dikerjakan", "sedang dikerjakan", "selesai dikerjakan" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbStatusBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jTextFieldSerialNumber)
                        .addComponent(jTextFieldMerkLaptop)
                        .addComponent(jComboBoxNamaCustomer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxUser, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxNamaCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldMerkLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbStatusBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jButtonUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonClose)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonClose))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private Connection conn =Database.getConnection();
    private int id_detail_barang,  id_customer, id_user;
    private String nama_customer;

    public void DataDiTerima(int id_detail_barang,  int id_customer, String nama_customer, String merk_laptop, String serial_number, String keterangan){
        this.id_detail_barang = id_detail_barang;
        this.id_customer = id_customer;
        this.nama_customer = nama_customer;
        jTextFieldMerkLaptop.setText(merk_laptop);
        jTextFieldSerialNumber.setText(serial_number);
        jTextAreaKeterangan.setText(keterangan);
    }
    private void comboBX() {
        System.out.println("ini ganti : "+ganti);
        if (ganti == 1) {
            try {
                String sql = "SELECT * FROM customer";
                String sql2 = "SELECT id_user, nama FROM `user`";
                PreparedStatement ps = conn.prepareStatement(sql);
                PreparedStatement ps2 = conn.prepareStatement(sql2);
                ResultSet rs = ps.executeQuery();
                ResultSet rs2 = ps2.executeQuery();
                // Clear existing items in the combo box
                jComboBoxNamaCustomer.removeAllItems();
                jComboBoxUser.removeAllItems();
                // Add items from the ResultSet
                while (rs2.next()) {
                    ComboObject comboObject2 = new ComboObject(rs2.getInt("id_user"), rs2.getString("nama"));
                    System.out.println("ini id user :"+id_user);
                    jComboBoxUser.addItem(comboObject2);
                    // Check if the current item matches the desired id_customer
                    if (rs2.getInt("id_user") == id_user) {
                        // Set the item as selected if it matches
                        jComboBoxUser.setSelectedItem(comboObject2);
                    }
                }
                while (rs.next()) {
                    ComboObject comboObject = new ComboObject(rs.getInt("id_customer"), rs.getString("nama"));
                    jComboBoxNamaCustomer.addItem(comboObject);
                    // Check if the current item matches the desired id_customer
                    if (rs.getInt("id_customer") == id_customer) {
                        // Set the item as selected if it matches
                        jComboBoxNamaCustomer.setSelectedItem(comboObject);
                    }
                }
                rs.close();
                rs2.close();
            } catch (Exception e) {
                System.out.println("Error: " + e.getMessage());
            }
        } else if (ganti == 2) {
            try {
                String sql = "SELECT * FROM customer";
                PreparedStatement ps = conn.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                String sql2 = "SELECT * FROM user;";
                PreparedStatement ps2 = conn.prepareStatement(sql2);
                ResultSet rs2 = ps2.executeQuery();
                // Clear existing items in the combo box
                jComboBoxNamaCustomer.removeAllItems();
                jComboBoxUser.removeAllItems();
                // Add items from the ResultSet
                while (rs.next()) {
                    jComboBoxNamaCustomer.addItem(new ComboObject(rs.getInt("id_customer"), rs.getString("nama")));
                }
                // Set a default selected item (first item) if needed
                if (jComboBoxNamaCustomer.getItemCount() > 0) {
                    jComboBoxNamaCustomer.setSelectedIndex(0);
                }
                while (rs2.next()){
                    jComboBoxUser.addItem(new ComboObject(rs2.getInt("id_user"), rs2.getString("nama")));
                }
                if (jComboBoxUser.getItemCount() > 0) {
                    jComboBoxUser.setSelectedIndex(0);
                }
                rs.close();
                rs2.close();
            } catch (Exception e) {
                System.out.println("Error: " + e.getMessage());
            }
        }
    }
    
    private int ganti;
    public void GantiNama(int ganti){
        this.ganti = ganti;
        if(ganti == 1){
            System.out.println("id_customer: " + id_customer);
            comboBX();
            jLabel1.setText("UPDATE DATA");
            jButtonUpdate.setText("UPDATE");
        }else if(ganti == 2){
            comboBX();
            jLabel1.setText("INSERT DATA");
            jButtonUpdate.setText("INSERT");
        }
    }

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        if(jButtonUpdate.getText().equals("UPDATE")){
            System.out.println("Database Connected");
            try {
               
                //check inout kosong
                if(jTextFieldMerkLaptop.getText().equals("") || jTextFieldSerialNumber.getText().equals("") || jTextAreaKeterangan.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
                    return;
                }else{
                    String sql = "UPDATE detail_barang SET merk_laptop=?, serial_number=?, keterangan_barang=?, id_user=?, status=?, id_customer=? WHERE id_detail_barang=? ";

                    PreparedStatement ps = conn.prepareStatement(sql);
                    ComboObject co = (ComboObject) jComboBoxNamaCustomer.getSelectedItem();
                    ComboObject co2 = (ComboObject) jComboBoxUser.getSelectedItem();
                    ps.setString(1, jTextFieldMerkLaptop.getText());
                    ps.setString(2, jTextFieldSerialNumber.getText());
                    ps.setString(3, jTextAreaKeterangan.getText());
                    ps.setInt(4, co2.getId());
                    ps.setString(5, String.valueOf(cbStatusBarang.getSelectedItem()));
                    ps.setInt(6, co.getId());
                    ps.setInt(7, id_detail_barang);
                    int hasil1 = ps.executeUpdate();

                    if (hasil1 > 0) {
                        JOptionPane.showMessageDialog(null, "Data berhasil diupdate");
                    } else {
                        JOptionPane.showMessageDialog(null, "Data gagal diupdate");
                    }
                    //close
                    ps.close();

                    
                }
                this.dispose();
            } catch (Exception e) {
                System.out.println("Error: " + e.getMessage());
            }
        }else if(jButtonUpdate.getText().equals("INSERT")){
            try {
                //check inout kosong
                if( jTextFieldMerkLaptop.getText().equals("") || jTextFieldSerialNumber.getText().equals("") || jTextAreaKeterangan.getText().equals("")){
                    JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
                    return;
                }else{
                    ComboObject co = (ComboObject) jComboBoxNamaCustomer.getSelectedItem();
                    ComboObject co2 = (ComboObject) jComboBoxUser.getSelectedItem();
                    //BGIAN INSERT NOMOR ORDER SERVICE BELUM DI SET
                    String sql = "INSERT INTO detail_barang (merk_laptop, serial_number, keterangan_barang, tgl_masuk, id_user, status, nomor_barang,id_customer) VALUES (?, ?, ?, ?, ?, ?, null,?)";
                    String sql3 = "UPDATE detail_barang t JOIN (SELECT t.id_detail_barang,CONCAT('OR-',EXTRACT(YEAR FROM t.tgl_masuk),'-', LPAD((ROW_NUMBER() OVER (PARTITION BY EXTRACT(YEAR FROM t.tgl_masuk) ORDER BY t.id_detail_barang)), 4, '0')) AS new_transaction_number FROM detail_barang t ) subquery ON t.id_detail_barang = subquery.id_detail_barang SET t.nomor_barang = subquery.new_transaction_number;";
                    PreparedStatement ps = conn.prepareStatement(sql);
                    PreparedStatement ps3 = conn.prepareStatement(sql3);
                    ps.setString(1, jTextFieldMerkLaptop.getText());
                    ps.setString(2, jTextFieldSerialNumber.getText());
                    ps.setString(3, jTextAreaKeterangan.getText());
                    ps.setString(4, LocalDateTime.now().toString());
                    ps.setInt(5, co2.getId());
                    ps.setString(6, String.valueOf(cbStatusBarang.getSelectedItem()));
                    ps.setInt(7, co.getId());
                    int hasil = ps.executeUpdate();
                    int hasil3 = ps3.executeUpdate();
                    if (hasil > 0) {
                        JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
                    } else {
                        JOptionPane.showMessageDialog(null, "Data gagal disimpan");
                    }
                    //close
                    ps.close();

                }
 
                this.dispose();
            } catch (Exception e) {
                System.out.println("Error: " + e.getMessage());
            }

        }

    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderServiceUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderServiceUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderServiceUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderServiceUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OrderServiceUpdate dialog = new OrderServiceUpdate(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbStatusBarang;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<ComboObject> jComboBoxNamaCustomer;
    private javax.swing.JComboBox<ComboObject> jComboBoxUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaKeterangan;
    private javax.swing.JTextField jTextFieldMerkLaptop;
    private javax.swing.JTextField jTextFieldSerialNumber;
    // End of variables declaration//GEN-END:variables
}

class ComboObject{
    private int id;
    private String nama;

    public ComboObject(int id, String nama) {
        this.id = id;
        this.nama = nama;
    }

    public int getId() {
        return id;
    }

    public String getNama() {
        return nama;
    }
    
    @Override
    public String toString(){
        return nama;
    }
}

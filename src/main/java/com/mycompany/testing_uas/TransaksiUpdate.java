/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.testing_uas;

import com.formdev.flatlaf.FlatLightLaf;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author satan
 */
public class TransaksiUpdate extends javax.swing.JDialog {

    /**
     * Creates new form TransaksiUpdate
     */
    public TransaksiUpdate(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        LoadCb();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfAmbil = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbBarang = new javax.swing.JComboBox<>();
        lblMerk = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblSerial = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblKeluhan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setText("Nama Pengambil Barang : ");

        tfAmbil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAmbilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfAmbil, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAmbil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(177, 177, 177))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TAMBAH TRANSAKSI");
        jLabel1.setToolTipText("");

        btnUpdate.setText("TAMBAH");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClose.setText("CLOSE");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setText("Customer         :");

        jLabel6.setText("Merk                 :");

        lblMerk.setText("-");

        jLabel10.setText("Serial Number :");

        lblSerial.setText("-");

        jLabel3.setText("Keluhan           :");

        lblKeluhan.setText("-");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMerk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbBarang, 0, 223, Short.MAX_VALUE)
                            .addComponent(lblSerial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblKeluhan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblMerk))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lblSerial))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblKeluhan))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnClose))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private Connection con = Database.getConnection();
    private int id_customer, id_detail_barang, id_transaksi;
    private String nama_pengambil, no_barang;
    private float total;
    public void DataDiterima(int id_transaksi, String nama_pengambil){
        this.id_transaksi=id_transaksi;
        this.nama_pengambil=nama_pengambil;
    }

    public int getId_detail_barang() {
        return id_detail_barang;
    }

    private void LoadCb() {
        try {
            System.out.println("LoadCb Mulai");
            String sql = "SELECT c.id_customer, c.nama, db.nomor_barang, db.id_detail_barang FROM customer c JOIN detail_barang db ON c.id_customer = db.id_customer";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {

                TransaksiComboObject comboObject = new TransaksiComboObject(rs.getInt("id_customer"), rs.getInt("id_detail_barang"), rs.getString("nama"), rs.getString("nomor_barang"));
                cbBarang.addItem(comboObject);
            }
            rs.close();
            ps.close();
        } catch (Exception e) {
            System.out.println("Error : " + e.getMessage());
        }
        System.out.println("Loadcb berhasil");
        cbBarang.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                TransaksiComboObject isSelected = (TransaksiComboObject) cbBarang.getSelectedItem();
                try {
                    String sql = "SELECT db.id_detail_barang, db.merk_laptop, db.serial_number, c.id_customer, GROUP_CONCAT(ds.service_tambahan SEPARATOR ', ') AS 'keluhan' FROM customer c JOIN detail_barang db ON c.id_customer = db.id_customer JOIN data_service ds ON db.id_detail_barang = ds.id_detail_barang WHERE db.nomor_barang = ?";
                    System.out.println(sql);
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.setString(1, String.valueOf(isSelected.getNomor_barang()));
                    ResultSet rs = ps.executeQuery();
                    while (rs.next()) {
                        lblMerk.setText(rs.getString("merk_laptop"));
                        lblSerial.setText(rs.getString("serial_number"));
                        lblKeluhan.setText(rs.getString("keluhan"));
                        id_detail_barang = rs.getInt("id_detail_barang");
                        id_customer = rs.getInt("id_customer");
                        no_barang = isSelected.getNomor_barang();
                    }
                }catch(Exception ex){
                    ex.printStackTrace();
                    System.out.println("Data gagal diubah");
                }

            }
        });
    }
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed
    public void GantiNama(int pilih) {
        if (pilih == 1) {
        btnUpdate.setText("Insert");
        } else if (pilih == 2) {
            cbBarang.setEnabled(false);
        btnUpdate.setText("Update");
        }
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (btnUpdate.getText().equals("Insert")) {
            if (con != null) {
                System.out.println("sudah terkoneksi");
                try {
                    PanelTransaksiMain trnmain = new PanelTransaksiMain();
                    trnmain.LoadTransaksi();
                    nama_pengambil = tfAmbil.getText();
                    String sql = "INSERT INTO transaksi (Nomor_Transaksi, id_transaksi, id_detail_barang, nama_pengambil, tanggal_transaksi," +
                            " total_harga) VALUES ('', NULL, ?, ?, ?, ?);";
                    String sql2 = "SELECT c.id_customer, SUM(price) AS Total FROM customer c JOIN detail_barang db ON c.id_customer = db.id_customer JOIN data_service ds ON db.id_detail_barang = ds.id_detail_barang WHERE c.id_customer=?";
                    String sql3 = "UPDATE transaksi t JOIN (SELECT t.id_transaksi,CONCAT('TR-',EXTRACT(YEAR FROM t.tanggal_transaksi),'-', LPAD((ROW_NUMBER() OVER (PARTITION BY EXTRACT(YEAR FROM t.tanggal_transaksi) ORDER BY t.id_transaksi)), 4, '0')) AS new_transaction_number FROM transaksi t ) subquery ON t.id_transaksi = subquery.id_transaksi SET t.Nomor_Transaksi = subquery.new_transaction_number;";
                    String sql4 = "UPDATE detail_barang SET status = 'selesai dikerjakan' WHERE id_detail_barang = ?";
                    PreparedStatement ps2 = con.prepareStatement(sql2);
                    PreparedStatement ps4 = con.prepareStatement(sql4);
                    ps2.setInt(1, id_customer);
                    ps4.setInt(1, id_detail_barang);
                    ResultSet rs = ps2.executeQuery();

                    while (rs.next()) {
                        total = rs.getFloat("Total");
                    }
                    String sqlPriceCheck = "SELECT price FROM data_service ds JOIN detail_barang db ON ds.id_detail_barang = db.id_detail_barang WHERE db.id_detail_barang = ? AND price IS NULL";
                    PreparedStatement psPriceCheck = con.prepareStatement(sqlPriceCheck);
                    psPriceCheck.setInt(1, id_detail_barang);
                    ResultSet rsPriceCheck = psPriceCheck.executeQuery();
                    System.out.println("No barang dipilih : "+no_barang);
                    if (trnmain.checkIsi(no_barang) == true){
                        JOptionPane.showMessageDialog(this, "No barang sudah ada di tabel transaksi");
                        System.out.println("detected no barang sama");
                        return;
                    }
                    if (rsPriceCheck.next()) {
                        JOptionPane.showMessageDialog(this, "Price cannot be null");
                        psPriceCheck.close();
                        return;
                    }
                    if (nama_pengambil.equals("") || id_customer == 0) {
                        JOptionPane.showMessageDialog(this, "Data Tidak Boleh Kosong");
                        return;
                    } else {
                        PreparedStatement ps = con.prepareStatement(sql);
                        ps.setInt(1, id_detail_barang);
                        ps.setString(2, nama_pengambil);
                        ps.setString(3, LocalDateTime.now().toString());
                        ps.setFloat(4, total);
                        int hasil = ps.executeUpdate();
                        PreparedStatement ps3 = con.prepareStatement(sql3);
                        int hasil2 = ps3.executeUpdate();
                        int hasil3 = ps4.executeUpdate();
                        if ((hasil == 1) && (hasil2 == 1) && (hasil3 == 1)) {
                            System.out.println("Data berhasil ditambahkan");
                            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
                        }
                        System.out.println("update id serv: " + id_detail_barang + "nma:" + nama_pengambil + " total" + total + "idcustom " + id_customer);
                        ps.close();
                        ps2.close();
                        ps3.close();
                        ps4.close();
                        rs.close();
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                    System.out.println("Error : " + ex.getMessage());
                }
            }

        }else if(btnUpdate.getText().equals("Update")){
            try{
                System.out.println("UPDATE gan");
                String sql = "UPDATE `transaksi` SET `nama_pengambil`=? WHERE id_transaksi = ?";
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1,tfAmbil.getText());
                ps.setInt(2,this.id_transaksi);
                ps.executeUpdate();
            } catch (Exception ex) {
                ex.printStackTrace();
                System.out.println("Error : " + ex.getMessage());
            }
        }
        this.dispose();
    }
//GEN-LAST:event_btnUpdateActionPerformed

    private void tfAmbilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAmbilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAmbilActionPerformed

    public String getNama_pengambil() {
        return nama_pengambil;
    }

    public float getTotal() {
        System.out.println("get Total : " + total);
        return total;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatLightLaf.setup();
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TransaksiUpdate dialog = new TransaksiUpdate(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<TransaksiComboObject> cbBarang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblKeluhan;
    private javax.swing.JLabel lblMerk;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JTextField tfAmbil;
    // End of variables declaration//GEN-END:variables
}
class TransaksiComboObject{
    int id_customer, id_detail_barang;
    String nama_customer, nomor_barang;

    public TransaksiComboObject(int id_customer, int id_detail_barang, String nama_customer, String nomor_barang) {
        this.id_customer = id_customer;
        this.id_detail_barang = id_detail_barang;
        this.nama_customer = nama_customer;
        this.nomor_barang = nomor_barang;
    }

    public int getId_detail_barang() {
        return id_detail_barang;
    }

    public int getId_customer() {
        return id_customer;
    }

    public String getNama_customer() {
        return nama_customer;
    }

    public String getNomor_barang() {
        return nomor_barang;
    }
    @Override
    public String toString() {
        return nama_customer+" ("+nomor_barang+")";
    }
}


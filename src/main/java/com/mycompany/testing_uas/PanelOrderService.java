/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.testing_uas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RICKY
 */
public class PanelOrderService extends javax.swing.JPanel {

    /**
     * Creates new form PanelOrderService
     */
    public PanelOrderService() {
        initComponents();
        CellListener();
        LoadKolom();
        LoadOs();
        jTableOs.setModel(model);
        TampilBarang();
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonCari = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonManageKeluhan = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableOs = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(205, 127, 50));

        jPanel1.setBackground(new java.awt.Color(255, 229, 212));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonAdd.setText("Add +");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonCari.setText("Cari");
        jButtonCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCariActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonManageKeluhan.setText("Manage Keluhan");
        jButtonManageKeluhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonManageKeluhanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButtonAdd)
                .addGap(18, 18, 18)
                .addComponent(jButtonUpdate)
                .addGap(18, 18, 18)
                .addComponent(jButtonDelete)
                .addGap(18, 18, 18)
                .addComponent(jButtonManageKeluhan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonCari)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonCari)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonManageKeluhan))
                .addGap(18, 18, 18))
        );

        jTableOs.setBackground(new java.awt.Color(239, 199, 194));
        jTableOs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No Barang", "Merk", "No Serial", "Ket", "Tgl Masuk", "Nama Pemilik", "Status", "Jumlah Keluhan"
            }
        ));
        jScrollPane1.setViewportView(jTableOs);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDER SERVICE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(246, 246, 246))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private DefaultTableModel model =new DefaultTableModel();
    private Connection con = Database.getConnection();
    private ArrayList<detail_barang> list = new ArrayList<>();
    private void CellListener(){
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
        jButtonManageKeluhan.setEnabled(false);
        jTableOs.getSelectionModel().addListSelectionListener(e -> {
            boolean selectedRow = jTableOs.getSelectedRow() != -1;
            jButtonUpdate.setEnabled(selectedRow);
            jButtonDelete.setEnabled(selectedRow);
            jButtonManageKeluhan.setEnabled(selectedRow);
        });
    }
    private void LoadKolom(){
        model.addColumn("No Barang");
        model.addColumn("Merk");
        model.addColumn("No Serial");
        model.addColumn("Keterangan Barang");
        model.addColumn("Tgl Masuk");
        model.addColumn("Nama Pemilik");
        model.addColumn("Status");
        model.addColumn("Jumlah Keluhan");
    }
    private void LoadOs(){
        if(con != null){
            System.out.println("Connected to database");
            list = new ArrayList<>();
            try{
                String sql = "SELECT db.id_detail_barang, db.merk_laptop, db.serial_number, db.keterangan_barang, db.id_customer, db.tgl_masuk, c.nama, db.nomor_barang, db.status, COUNT(ds.id_data_service) AS 'JUMLAH' FROM detail_barang db JOIN customer c ON db.id_customer = c.id_customer JOIN user u ON db.id_user = u.id_user LEFT JOIN data_service ds ON db.id_detail_barang = ds.id_detail_barang GROUP BY db.id_detail_barang; ";
            PreparedStatement state = con.prepareStatement(sql);
                System.out.println("prepare statement");
            ResultSet rs = state.executeQuery();
            while (rs.next()) {
                System.out.println("While Jalan");
                int id_detail_barang = rs.getInt(1);
                String merk = rs.getString(2);
                String no_serial = rs.getString(3);
                String ket = rs.getString(4);
                int id_customer = rs.getInt(5);
                String tgl_masuk = rs.getString(6);
                String nama_customer = rs.getString(7);
                String nomor_barang = rs.getString(8);
                String status = rs.getString(9);
                int jumlah_keluhan = rs.getInt(10);

                
                detail_barang db = new  detail_barang(id_customer, tgl_masuk, nama_customer, id_detail_barang, merk, no_serial, ket, jumlah_keluhan, nomor_barang, status);
                System.out.println("keterangna : " + ket);

                list.add(db);
                }
                rs.close();
                state.close();

            }catch(Exception e){
                System.out.println("Failed to connect to database"+e);
                e.printStackTrace();
                e.getMessage();
            }
        }
    }
    private void TampilBarang(){
        model.setRowCount(0);
        for(detail_barang b : list){
            model.addRow(new Object[]{
                b.getNomor_barang(),
                b.getMerk(),
                b.getNo_serial(),
                b.getKet(),
                b.getTgl_masuk(),
                b.getNama_customer(),
                b.getStatus(),
                b.getJumlah_keluhan()
            });
        }
    }
    private void refresh(){
        System.out.println("Refres jalan");
        LoadOs();
        TampilBarang();
    }
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        OrderServiceUpdate osa = new OrderServiceUpdate(null, true);
        osa.GantiNama(2);
        osa.setVisible(true);
        osa.pack();
        osa.setLocationRelativeTo(null);
        osa.setDefaultCloseOperation(OrderServiceUpdate.DISPOSE_ON_CLOSE);
        refresh();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCariActionPerformed
        System.out.println("jbutton cari jalan");
        String cari = jTextField1.getText();
        String sql = "Select * from detail_barang where merk_laptop like ? or serial_number like ? or keterangan_barang like ? ";
        try{
            PreparedStatement state = con.prepareStatement(sql);
            state.setString(1, "%"+cari+"%");
            state.setString(2, "%"+cari+"%");
            state.setString(3, "%"+cari+"%");
            ResultSet rs = state.executeQuery();
            model.setRowCount(0);
            while(rs.next()){
                Object[] obj = new Object[6];
                obj[0] = rs.getString("merk_laptop");
                obj[1] = rs.getString("serial_number");
                obj[2] = rs.getString("keterangan_barang");
                model.addRow(obj);
            }
        }catch(Exception e){
            System.out.println("Failed to connect to database"+e);
            e.printStackTrace();
            e.getMessage();
        }
        refresh();
    }//GEN-LAST:event_jButtonCariActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int baristerpilih = jTableOs.getSelectedRow();
        int id_detail_barang = list.get(baristerpilih).getId_detail_barang();
        // konfirmasi hapus
        int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if(confirm == JOptionPane.YES_OPTION){
            try{
                String sql = "DELETE FROM detail_barang WHERE id_detail_barang = ?";
                PreparedStatement state = con.prepareStatement(sql);
                state.setInt(1, id_detail_barang);
                state.executeUpdate();
                state.close();
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, "Data gagal dihapus/terdapat data yang terkait");
                e.printStackTrace();
            }
        }
        refresh();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        OrderServiceUpdate osa = new OrderServiceUpdate(null, true);
        int baristerpilih = jTableOs.getSelectedRow();
        int id_detail_barang = list.get(baristerpilih).getId_detail_barang();
        int id_customer =list.get(baristerpilih).getId_customer();
        String nama_customer = list.get(baristerpilih).getNama_customer();
        String merk_laptop = list.get(baristerpilih).getMerk();
        String serial_number = list.get(baristerpilih).getNo_serial();
        String ket = list.get(baristerpilih).getKet();
        osa.DataDiTerima(id_detail_barang, id_customer, nama_customer, merk_laptop, serial_number, ket);
        osa.GantiNama(1);
        osa.setVisible(true);
        osa.pack();
        osa.setLocationRelativeTo(null);
        osa.setDefaultCloseOperation(OrderServiceUpdate.DISPOSE_ON_CLOSE);
        refresh();
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonManageKeluhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonManageKeluhanActionPerformed
        int baristerpilih = jTableOs.getSelectedRow();
        int id_detail_barang = list.get(baristerpilih).getId_detail_barang();
        ManageKeluhan mk = new ManageKeluhan(null, true);
        mk.DataDiterima(id_detail_barang);
        mk.setVisible(true);
        refresh();
    }//GEN-LAST:event_jButtonManageKeluhanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCari;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonManageKeluhan;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableOs;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
class  detail_barang {
    private int id_customer;
    private String tgl_masuk;
    private String nama_customer;
    private int id_detail_barang;
    private String merk;
    private String no_serial;
    private String ket;
    private int jumlah_keluhan;
    private String nomor_barang;
    private String status;

    public detail_barang(int id_customer, String tgl_masuk, String nama_customer, int id_detail_barang, String merk, String no_serial, String ket, int jumlah_keluhan, String nomor_barang, String status) {
        this.id_customer = id_customer;
        this.tgl_masuk = tgl_masuk;
        this.nama_customer = nama_customer;
        this.id_detail_barang = id_detail_barang;
        this.merk = merk;
        this.no_serial = no_serial;
        this.ket = ket;
        this.jumlah_keluhan = jumlah_keluhan;
        this.nomor_barang = nomor_barang;
        this.status = status;
    }


    public int getId_customer() {
        return this.id_customer;
    }

    public void setId_customer(int id_customer) {
        this.id_customer = id_customer;
    }

    public String getTgl_masuk() {
        return this.tgl_masuk;
    }

    public void setTgl_masuk(String tgl_masuk) {
        this.tgl_masuk = tgl_masuk;
    }

    public String getNama_customer() {
        return this.nama_customer;
    }

    public void setNama_customer(String nama_customer) {
        this.nama_customer = nama_customer;
    }

    public int getId_detail_barang() {
        return this.id_detail_barang;
    }

    public void setId_detail_barang(int id_detail_barang) {
        this.id_detail_barang = id_detail_barang;
    }

    public String getMerk() {
        return this.merk;
    }

    public void setMerk(String merk) {
        this.merk = merk;
    }

    public String getNo_serial() {
        return this.no_serial;
    }

    public void setNo_serial(String no_serial) {
        this.no_serial = no_serial;
    }

    public String getKet() {
        return this.ket;
    }

    public void setKet(String ket) {
        this.ket = ket;
    }

    public int getJumlah_keluhan() {
        return this.jumlah_keluhan;
    }

    public void setJumlah_keluhan(int jumlah_keluhan) {
        this.jumlah_keluhan = jumlah_keluhan;
    }

    public String getNomor_barang() {
        return this.nomor_barang;
    }

    public void setNomor_barang(String nomor_barang) {
        this.nomor_barang = nomor_barang;
    }

    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }


}